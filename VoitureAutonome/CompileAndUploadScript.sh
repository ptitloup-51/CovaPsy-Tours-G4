#!/bin/bash

# Configuration
RUNTIME="linux-arm64"
PUBLISH_DIR="publish_output"
REMOTE_USER="covapsytours5"
REMOTE_HOST="192.168.2.127"
REMOTE_PASS="covapsytours5"
REMOTE_DIR="/home/covapsytours5/Documents/Test"
EXECUTABLE="VoitureAutonome"

# √âtape 1 : Publier l'application
echo "üì¶ Publication de l'application pour $RUNTIME..."
dotnet publish --runtime $RUNTIME --self-contained false -o $PUBLISH_DIR

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de la publication !"
    exit 1
fi

# √âtape 2 : Transf√©rer les fichiers en SSH
echo "üì° Transfert des fichiers vers $REMOTE_HOST..."

# Cr√©er le r√©pertoire distant si n√©cessaire
sshpass -p "$REMOTE_PASS" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "mkdir -p $REMOTE_DIR"

# Transf√©rer les fichiers avec rsync
sshpass -p "$REMOTE_PASS" rsync -avz --delete $PUBLISH_DIR/ $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR/

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors du transfert des fichiers !"
    exit 1
fi

# √âtape 3 : Donner les permissions et ex√©cuter l'application en gardant le terminal ouvert
echo "üîë Attribution des permissions et ex√©cution du programme en premier plan..."

sshpass -p "$REMOTE_PASS" ssh -t -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
    chmod +x $REMOTE_DIR/$EXECUTABLE
    echo "üöÄ Chargement des variables d'environnement..."
    
    # Ajout explicite de dotnet au PATH
    export DOTNET_ROOT=/home/covapsytours5/.dotnet
    export PATH=\$DOTNET_ROOT:\$PATH

    # V√©rification du chemin de dotnet
    echo "üîç Chemin de dotnet utilis√© : \$(which dotnet)"

    echo "üöÄ Lancement de l'application en premier plan..."
    cd $REMOTE_DIR
    sudo -E ./VoitureAutonome
EOF

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de l'ex√©cution de la commande SSH !"
    exit 1
fi

echo "‚úÖ D√©ploiement termin√© avec succ√®s !"